/*
 * JTimePosition.java
 *
 * Created on 24 Ιούνιος 2005, 11:42 μμ
 *
 * This file is part of Jubler.
 *
 * Jubler is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 2.
 *
 *
 * Jubler is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Jubler; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 */

package com.panayotis.jubler.time.gui;

import com.panayotis.jubler.os.DEBUG;
import com.panayotis.jubler.subs.SubEntry;
import com.panayotis.jubler.subs.Subtitles;
import java.awt.BorderLayout;
import java.util.Vector;


import static com.panayotis.jubler.i18n.I18N._;
import com.panayotis.jubler.subs.style.SubStyle;

/**
 *
 * @author  teras
 */
public class JTimeFullSelection extends JTimeArea {
    
    
    JTimeRegion tregion;
    
    /** Creates new form JTimePosition */
    public JTimeFullSelection() {
        super();
        initComponents();
        tregion = new JTimeRegion();
        TimePanel.add(tregion, BorderLayout.CENTER);
        tregion.setButtonsEnabled(false);
    }
    
    
    public void updateData(Subtitles subs, int[] selected) {
        super.updateData(subs, selected );
        tregion.updateData(subs, selected);
        
        int selvalue = StyleSel.getSelectedIndex();
        StyleSel.removeAllItems();
        for (SubStyle style : subs.getStyleList()) {
            StyleSel.addItem(style);
        }
        if (subs.getStyleList().size()<2) {
            byStyle.setEnabled(false);
            StyleSel.setEnabled(false);
            bySelection.setSelected(true);
        } else {
            byStyle.setEnabled(true);
            StyleSel.setEnabled(true);
            if ( selvalue < 0 )
                selvalue = 0;
            if ( selvalue < subs.getStyleList().size() )
                StyleSel.setSelectedIndex(selvalue);
        }
    }
    
    public Vector<SubEntry> getAffectedSubs() {
        Vector<SubEntry> affected;
        SubEntry csub;
        int i;
        
        affected = new Vector<SubEntry>();
        
        if (bySelection.isSelected()) {
            /* Select affected subtitles by user selection */
            for ( i = 0 ; i < selected.length ; i++ ) {
                affected.add(subs.elementAt(selected[i]));
            }
        } else  if (byColor.isSelected()) {
            /* Select affected subtitles by marking */
            int selmark = ColorSel.getSelectedIndex();
            
            for ( i = 0 ; i < subs.size() ; i++ ) {
                csub = subs.elementAt(i);
                if (selmark == csub.getMark() ) {
                    affected.add(csub);
                }
            }
        } else if (byStyle.isSelected()) {
            /* Select affected subtitles by marking */
            SubStyle style = (SubStyle)StyleSel.getSelectedItem();
            
            for ( i = 0 ; i < subs.size() ; i++ ) {
                csub = subs.elementAt(i);
                if ( style  == csub.getStyle() ) {
                    affected.add(csub);
                }
            }
        } else {
            affected = tregion.getAffectedSubs();
        }
        return affected;
    }
    
    public void forceRangeSelection() {
        byRange.setSelected(true);
        tregion.setButtonsEnabled(true);
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        Type = new javax.swing.ButtonGroup();
        SelectionPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        bySelection = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        byColor = new javax.swing.JRadioButton();
        ColorSel = new javax.swing.JComboBox();
        StylePanel = new javax.swing.JPanel();
        byStyle = new javax.swing.JRadioButton();
        StyleSel = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        byRange = new javax.swing.JRadioButton();
        TimePanel = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        setBorder(new javax.swing.border.TitledBorder(_("Select subtitles to work on")));
        SelectionPanel.setLayout(new javax.swing.BoxLayout(SelectionPanel, javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setLayout(new java.awt.BorderLayout());

        Type.add(bySelection);
        bySelection.setSelected(true);
        bySelection.setText(_("By user selection"));
        bySelection.setToolTipText(_("Select subtitles depending on user selection"));
        bySelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bySelectionActionPerformed(evt);
            }
        });

        jPanel1.add(bySelection, java.awt.BorderLayout.CENTER);

        SelectionPanel.add(jPanel1);

        jPanel6.setLayout(new java.awt.GridLayout(1, 2));

        Type.add(byColor);
        byColor.setText(_("By color marking"));
        byColor.setToolTipText(_("Select subtitles depending on their color"));
        byColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byColorActionPerformed(evt);
            }
        });

        jPanel6.add(byColor);

        ColorSel.setModel(new javax.swing.DefaultComboBoxModel(SubEntry.MarkNames));
        ColorSel.setToolTipText(_("The subtitle color to use for selection"));
        ColorSel.setEnabled(false);
        jPanel6.add(ColorSel);

        SelectionPanel.add(jPanel6);

        StylePanel.setLayout(new java.awt.GridLayout(1, 0));

        Type.add(byStyle);
        byStyle.setText(_("By theme"));
        byStyle.setToolTipText(_("Select subtitles depending on their theme"));
        byStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byStyleActionPerformed(evt);
            }
        });

        StylePanel.add(byStyle);

        StyleSel.setToolTipText(_("The theme to use for selection"));
        StyleSel.setEnabled(false);
        StylePanel.add(StyleSel);

        SelectionPanel.add(StylePanel);

        jPanel2.setLayout(new java.awt.BorderLayout());

        Type.add(byRange);
        byRange.setText(_("By region"));
        byRange.setToolTipText(_("Select subtitles depending on a specified region"));
        byRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byRangeActionPerformed(evt);
            }
        });

        jPanel2.add(byRange, java.awt.BorderLayout.CENTER);

        SelectionPanel.add(jPanel2);

        add(SelectionPanel);

        TimePanel.setLayout(new java.awt.GridLayout(1, 2));

        TimePanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 20, 1, 1)));
        add(TimePanel);

    }
    // </editor-fold>//GEN-END:initComponents
    
    private void byStyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byStyleActionPerformed
        tregion.setButtonsEnabled(false);
        ColorSel.setEnabled(false);
        StyleSel.setEnabled(true);
    }//GEN-LAST:event_byStyleActionPerformed
    
    private void byRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byRangeActionPerformed
        tregion.setButtonsEnabled(true);
        ColorSel.setEnabled(false);
        StyleSel.setEnabled(false);
    }//GEN-LAST:event_byRangeActionPerformed
    
    private void byColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byColorActionPerformed
        tregion.setButtonsEnabled(false);
        ColorSel.setEnabled(true);
        StyleSel.setEnabled(false);
    }//GEN-LAST:event_byColorActionPerformed
    
    private void bySelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bySelectionActionPerformed
        tregion.setButtonsEnabled(false);
        ColorSel.setEnabled(false);
        StyleSel.setEnabled(false);
    }//GEN-LAST:event_bySelectionActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ColorSel;

    public void updateUI() {
    }
    private javax.swing.JPanel SelectionPanel;
    private javax.swing.JPanel StylePanel;
    private javax.swing.JComboBox StyleSel;
    private javax.swing.JPanel TimePanel;
    private javax.swing.ButtonGroup Type;
    protected javax.swing.JRadioButton byColor;
    protected javax.swing.JRadioButton byRange;
    protected javax.swing.JRadioButton bySelection;
    private javax.swing.JRadioButton byStyle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    // End of variables declaration//GEN-END:variables
    
}
